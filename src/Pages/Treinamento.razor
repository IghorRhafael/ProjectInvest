@page "/treinamento/{moduloID:int}"

@using System.Web
@using ProjectInvest.Entidades
@using ProjectInvest.Enums
@using ProjectInvest.Server
@using System.Text.Json

@inject IJSRuntime JS

<MenuLateral Progresso="@progresso" Modulos="@_modulos" ModuloSelecionadoId="@_moduloSelecionado"
    AulaSelecionadaId="@_aulaSelecionadaID" OnModuloSelecionado="OnModuloSelecionado"
    OnAulaSelecionada="OnAulaSelecionada" MenuAberto="@MenuAberto" OnToggleMenu="ToggleMenu" />

<div class="content-page @(MenuAberto ? "menu-aberto" : "menu-fechado")">
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <div class="cursos-layout">

                        <div style="flex:1; display:flex; flex-direction:column; background:#111;">
                            <div
                                style="background:#232323; color:#fff; font-size:18px; font-weight:500; padding:12px 74px 8px 74px; position: sticky; top: 0; z-index:1;">
                                <button
                                    style="background:none; border:none; color:#fff; font-size:17px; cursor:pointer; margin:0 16px;"
                                    @onclick="Voltar">&lt; anterior</button>
                                <button
                                    style="background:none; border:none; color:#fff; font-size:17px; cursor:pointer; margin:0 16px; float:right;"
                                    @onclick="Avancar">próximo &gt;</button>
                            </div>
                            <div
                                style="flex:1; display:flex; align-items:center; justify-content:center; background:linear-gradient(120deg, #181818 80%, #211d15 100%); min-height:0; padding: 21px 1px;">
                                @if (AulaAtual != null)
                                {
                                    @if (AulaAtual.Tipo == ETipoAulas.Video)
                                    {
                                        <iframe
                                            style="width:90%; height:70vh; box-shadow:0 2px 18px #000a; border-radius:16px; border:3px solid #efbf4f; background:black;"
                                            src="@AulaAtual.Link" title="@AulaAtual.Nome" frameborder="0"
                                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                            allowfullscreen></iframe>
                                    }
                                    else if (AulaAtual.Tipo == ETipoAulas.Ebook)
                                    {
                                        <div style="font-size:29px; color:#029c91; text-align:center; width:100%;">&#128214;
                                            Ebook disponível para download.</div>
                                    }
                                    else
                                    {
                                        <div style="font-size:29px; color:#029c91; text-align:center; width:100%;">&#128196;
                                            Material de apoio disponível.</div>
                                    }
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int moduloID { get; set; } // ID do módulo inicial, pode ser passado via rota

    int progresso = 0;

    bool MenuAberto { get; set; } = true;

    public List<Modulo> _modulos = new List<Modulo>();

    EModulos _moduloSelecionado = EModulos.Modulo01; // Exemplo: ID do módulo inicial
    int _aulaSelecionadaID = 1; // Exemplo: ID da aula inicial

    protected override void OnInitialized()
    {
        //busca modulos pelo moduloID
        _modulos = ModuloServer.GetModulos((ECursos)moduloID);
    }

    void OnModuloSelecionado(EModulos moduloId)
    {
        _moduloSelecionado = moduloId;
        // Seleciona a primeira aula do módulo
        _aulaSelecionadaID = _modulos.FirstOrDefault(m => m.Id == moduloId)?.Aulas.FirstOrDefault()?.Id ?? 0;
    }

    void OnAulaSelecionada((EModulos moduloId, int aulaId) sel)
    {
        _moduloSelecionado = sel.moduloId;
        _aulaSelecionadaID = sel.aulaId;

       //UserProgressExtensions.MarcarAulaComoAssistida(sel.aulaId);
    }
    
    void ToggleMenu()
    {
        MenuAberto = !MenuAberto;
    }

    Aula AulaAtual =>
    _modulos.FirstOrDefault(m => m.Id == _moduloSelecionado)?
    .Aulas.FirstOrDefault(a => a.Id == _aulaSelecionadaID) ?? new Aula();

    void Avancar()
    {
        var modulo = _modulos.FirstOrDefault(m => m.Id == _moduloSelecionado);
        if (modulo == null) return;
        var idxAula = modulo.Aulas.FindIndex(a => a.Id == _aulaSelecionadaID);
        if (idxAula < modulo.Aulas.Count - 1)
        {
            _aulaSelecionadaID = modulo.Aulas[idxAula + 1].Id;
            //UserProgressExtensions.MarcarAulaComoAssistida(_aulaSelecionadaID);
        }
        else
        {
            var idxModulo = _modulos.FindIndex(m => m.Id == _moduloSelecionado);
            if (idxModulo < _modulos.Count - 1)
            {
                var proximoModulo = _modulos[idxModulo + 1];
                _moduloSelecionado = proximoModulo.Id;
                _aulaSelecionadaID = proximoModulo.Aulas.FirstOrDefault()?.Id ?? 0;
            }
        }
    }

    void Voltar()
    {
        var modulo = _modulos.FirstOrDefault(m => m.Id == _moduloSelecionado);
        if (modulo == null) return;
        var idxAula = modulo.Aulas.FindIndex(a => a.Id == _aulaSelecionadaID);
        if (idxAula > 0)
        {
            _aulaSelecionadaID = modulo.Aulas[idxAula - 1].Id;
        }
        else
        {
            var idxModulo = _modulos.FindIndex(m => m.Id == _moduloSelecionado);
            if (idxModulo > 0)
            {
                var anteriorModulo = _modulos[idxModulo - 1];
                _moduloSelecionado = anteriorModulo.Id;
                _aulaSelecionadaID = anteriorModulo.Aulas.LastOrDefault()?.Id ?? 0;
            }
        }
    }
}