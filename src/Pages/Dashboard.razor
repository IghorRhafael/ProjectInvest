@page "/Dashboard"
@using ProjectInvest.Entidades
@using ProjectInvest.Server
@using System.Text.Json

@inject NavigationManager Navigation
@inject IJSRuntime JS

<div style="background:#111;min-height:100vh;padding:40px;">
    <h2 style="color:#e9e9e9;font-weight:700;">MEUS TREINAMENTOS</h2>
    <div style="display:flex; gap:32px; flex-wrap:wrap; margin-top:40px;">
        @foreach (var curso in _cursos)
        {
            <div style="background:#181818;width:350px;border-radius:8px;overflow:hidden;box-shadow:0 2px 10px #0006;">
                <img src="@curso.ImagemUrl" alt="@curso.Titulo" style="width:100%;height:180px;object-fit:cover;" />
                <div style="padding:18px 18px 14px 18px;">
                    <div
                        style="font-weight:700;color:#fff;font-size:20px;line-height:1.2;margin-bottom:18px;text-transform:uppercase;">
                        @curso.Titulo</div>
                    <div style="margin-bottom:16px;">
                        <div style="display:flex;align-items:center;">
                            <span style="font-weight:700;font-size:15px;color:#fff;">@curso.Progresso% Progresso</span>
                        </div>
                        <div style="background:#333;height:6px;border-radius:3px;margin-top:6px;">
                            <div
                                style="background:#f6c04b;height:100%;border-radius:3px;transition:width .4s; width:@curso.Progresso%;">
                            </div>
                        </div>
                    </div>
                    <button @onclick="() => ContinueAprendendo(curso)"
                        style="background:#f6c04b;color:#181818;font-weight:700;width:100%;border:none;padding:14px 0;border-radius:6px;font-size:17px;cursor:pointer;transition:.2s;">
                        CONTINUE APRENDENDO
                    </button>
                </div>
            </div>
        }
    </div>
</div>


@code {

    List<Curso> _cursos = new();

    protected override async Task OnInitializedAsync()
    {
        var usuario = await JS.InvokeAsync<string>("localStorage.getItem", "usuarioAtual");
        if (string.IsNullOrEmpty(usuario))
        {
            Navigation.NavigateTo("");
            return;
        }

        _cursos = await Task.Run(() => TreinamentoServer.GetCursos());

    }

    private void ContinueAprendendo(Curso curso)
    {
        // Redireciona para a página do curso, passando o id do curso por querystring
        var moduloId = (int)curso.Id;
        Navigation.NavigateTo($"treinamento/{moduloId}");
    }
}
